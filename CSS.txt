Alihar elementos

    display: flef
    justify-content: center
    align-itens: center

    display: block
    margin-rigth: auto
    margin-left: auto
    margin: 0 auto

    position: absolute
    top: 50%
    left: 50%
    transform: translate(-50%, -50%)

    display: grid
    place-itens: center

Background imagem - conjunto de formatações
    background-size: cover -> cobrir container
    background-repeat: no-repeat -> não repetir quando a imagem acabar
    background-position: center center -> posiciona a imagem no centro 

Aplicar estilo no elemento que não tiver a classe especificada
    sintaxe:
        .elemento:not(.classeQueNaoPodeTer){estilo}
    ex:
        div:not(.teste){color:white} -> aplica cor branca a toda div que não tiver a classe especificada
    
Video responsivo e proporcional
    width: 100%
    padding-bottom: 56.25%

Deixar elementos na extremidade
    width: 00%
    justify-content: space-between

Animação de elemento
    crescer elemento
        transition: transform 0.4s ease-in-out -> suavisa as transições do elemento
        transform: scale3d (1.1, 1.1, 1) -> faz o eleento crescer 10%

    Esticar pra baixo
        1- Esconder parte do elemento
            overflow: hidden
            heigth: 10px
        2- Revelar elemento co hover
            .containder:hover .elemento{ 
                height: 200px
                transition: 0.8s ease-in-out}

Variavel sem processador de css
    :root{--nome-Variavel: #999;} -> definindo a variável

    color: var(--nome-Variavel) -> usando no css

Css grid -> organiza as partes do site em brades como uma tabela
    1-Nomeie cada área
        .elemento {grid-area: nome}

            ex:
                .header {grid-area: header;}
                .nav {grid-area: nav;}
                .section {grid-area: section;}
                .aside {grid-area: aside;}
                .footer {grid-area: footer;}

    2-Coloque  grid no elemento
        display: grid

    3-Organize o grid dentro do elemento container
        grid-template-areas:
            'header header header'
            'nav header aside'
            'footer footer footer'

Dicas Gerais
    gap: 1rem -> espaçamento entre elementos do container
    scroll-Behavior: smoth -> escrola suavemente
    text-align -> é no pai
    display-flex -> é no pai
    justify-content -> deixa o paragrafo quadrado
    display: block -> ocupa a lina toda
    display: inline -> não permite largura e altura
    overflow: hidden -> esconde o elemento se passar o tamanho do pai
    filter: blur (0.8px) -> desfoque
    max-width: 100vw -> 100% da área de visualização nunca ultrapasando
    gap: 1rem -> muda conforme tamanho da fonte padrão definida no body ou html